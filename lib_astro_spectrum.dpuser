dpuserdir=getenv("DPUSER_DIR")
run dpuserdir+"/Functions/lib_wcs.dpuser"

//Astronomical functions on spectra
function spec_fluxdens, inbuff, l1, l2, prflag {
//Compute the flux density average between wavelengths l1 and l2 for either spectrum or cube
//Returns either a single number (spectrum) or image (cube)
  p1=cvt_WCS_pixel_data(inbuff, l1, 1)
  p2=cvt_WCS_pixel_data(inbuff, l2, 1)
  cnt=total(inbuff[p1:p2],0)
  ll1=cvt_pixel_WCS_data(inbuff, p1, 1)
  ll2=cvt_pixel_WCS_data(inbuff, p2, 1)
  fluxavg=cnt/(p2-p1)
  fd=cnt/(ll2-ll1)
  if (prflag!=0) {
    print "SPEC_FLUXDENS: Pixel range : "+p1+"-"+p2+" ("+(p2-p1)+")"
    print "SPEC_FLUXDENS: Wavelength range : "+ll1+"-"+ll2+" ("+(ll2-ll1)+")"
    print "SPEC_FLUXDENS: Total flux (counts) : "+cnt
    print "SPEC_FLUXDENS: Average flux (counts) : "+fluxavg
    print "SPEC_FLUXDENS: Average flux density (counts/unit wavelength) : "+fd
  }
  spec_fluxdens=[fd,p1,p2,ll1,ll2,cnt,fluxavg]
}

function spec_sn, inbuff, l1, l2 {
//Compute "S/N" over wavelength region l1-l2
  p1=int(cvt_WCS_pixel_data(inbuff, l1, 1))
  if (p1<1) p1=1
  p2=int(cvt_WCS_pixel_data(inbuff, l2, 1))
  if (p2>naxis1(inbuff)) p2=naxis1(inbuff)
  sig=median(inbuff[p1:p2])
  ns=meddev(inbuff[p1:p2])
  spec_sn=sig/ns
}

function spec_wave_to_vel, inbuff, centre {
  waxis=naxis(inbuff) //Get the wavelength axis
  outbuff=inbuff
  wcs=get_WCS_data(inbuff,waxis)
  vc=centre/299792.458
  crval=0.0
  crpix=wcs[1]+(centre-wcs[2])/wcs[3]
  cdelt=wcs[3]/vc
  set_WCS_data outbuff, [crpix, crval, cdelt],waxis
  spec_wave_to_vel=outbuff
}
